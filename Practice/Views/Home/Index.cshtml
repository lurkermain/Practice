@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>API Tester - Products</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        input, button, textarea {
            margin: 5px 0;
            padding: 8px;
            width: 100%;
            box-sizing: border-box;
        }
        .section {
            margin-bottom: 20px;
            border: 1px solid #ccc;
            padding: 10px;
            border-radius: 5px;
        }
        .output {
            background: #f9f9f9;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <h1>Products API Tester</h1>

    <!-- GET ALL Products -->
    <div class="section">
        <h2>Get All Products</h2>
        <button onclick="getAllProducts()">Fetch All Products</button>
        <pre class="output" id="allProductsOutput"></pre>
    </div>

    <!-- GET Product by ID -->
    <div class="section">
        <h2>Get Product by ID</h2>
        <input type="number" id="productId" placeholder="Enter Product ID">
        <button onclick="getProductById()">Fetch Product</button>
        <pre class="output" id="productByIdOutput"></pre>
    </div>

    <!-- CREATE Product -->
    <div class="section">
        <h2>Create Product</h2>
        <input type="text" id="createName" placeholder="Name">
        <textarea id="createDescription" placeholder="Description"></textarea>
        <input type="text" id="createModelType" placeholder="Model Type">
        <button onclick="createProduct()">Create Product</button>
        <pre class="output" id="createProductOutput"></pre>
    </div>

    <!-- UPDATE Product -->
    <div class="section">
        <h2>Update Product</h2>
        <input type="number" id="updateId" placeholder="Enter Product ID">
        <input type="text" id="updateName" placeholder="Name">
        <textarea id="updateDescription" placeholder="Description"></textarea>
        <input type="text" id="updateModelType" placeholder="Model Type">
        <button onclick="updateProduct()">Update Product</button>
        <pre class="output" id="updateProductOutput"></pre>
    </div>

    <!-- DELETE Product -->
    <div class="section">
        <h2>Delete Product</h2>
        <input type="number" id="deleteId" placeholder="Enter Product ID">
        <button onclick="deleteProduct()">Delete Product</button>
        <pre class="output" id="deleteProductOutput"></pre>
    </div>

    <script>
        const apiBaseUrl = "https://localhost:7070/";

        async function getAllProducts() {
            const response = await fetch(apiBaseUrl);
            const data = await response.json();
            document.getElementById('allProductsOutput').textContent = JSON.stringify(data, null, 2);
        }

        async function getProductById() {
            const id = document.getElementById('productId').value;
            if (!id) {
                alert("Please enter a Product ID");
                return;
            }
            const response = await fetch(`${apiBaseUrl}/${id}`);
            if (response.ok) {
                const data = await response.json();
                document.getElementById('productByIdOutput').textContent = JSON.stringify(data, null, 2);
            } else {
                document.getElementById('productByIdOutput').textContent = "Product not found.";
            }
        }

        async function createProduct() {
            const name = document.getElementById('createName').value;
            const description = document.getElementById('createDescription').value;
            const modelType = document.getElementById('createModelType').value;

            const response = await fetch(apiBaseUrl, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ name, description, modelType })
            });

            const data = await response.json();
            document.getElementById('createProductOutput').textContent = JSON.stringify(data, null, 2);
        }

        async function updateProduct() {
            const id = document.getElementById('updateId').value;
            const name = document.getElementById('updateName').value;
            const description = document.getElementById('updateDescription').value;
            const modelType = document.getElementById('updateModelType').value;

            if (!id) {
                alert("Please enter a Product ID");
                return;
            }

            const response = await fetch(`${apiBaseUrl}/${id}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ id, name, description, modelType })
            });

            if (response.ok) {
                document.getElementById('updateProductOutput').textContent = "Product updated successfully.";
            } else {
                document.getElementById('updateProductOutput').textContent = "Failed to update product.";
            }
        }

        async function deleteProduct() {
            const id = document.getElementById('deleteId').value;
            if (!id) {
                alert("Please enter a Product ID");
                return;
            }

            const response = await fetch(`${apiBaseUrl}/${id}`, {
                method: "DELETE"
            });

            if (response.ok) {
                document.getElementById('deleteProductOutput').textContent = "Product deleted successfully.";
            } else {
                document.getElementById('deleteProductOutput').textContent = "Failed to delete product.";
            }
        }
    </script>
</body>
</html>
